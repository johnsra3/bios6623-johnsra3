mci <- read.csv("C:/Users/johnsra3/Documents/School/AdvancedData/Project3Data.csv", header = T)
mci <- mci[order(mci$id), ]
mci <- mci[!duplicated(mci$id), ]
mci <- mci[, -which(colnames(mci) == "cdr")]
mci$gender <- factor(mci$gender, levels = c("1", "2"), labels = c("Male", "Female"))
mci$demind <- factor(mci$demind, levels = c("0", "1"))
tabvars <- colnames(mci)[which(colnames(mci) == "gender"):which(colnames(mci) == "logmemII")]
tab1 <- CreateTableOne(vars = tabvars, strata = "demind", data = mci, test = F)
tab1print <- as.data.frame(print(tab1, showAllLevels = T))
tab1_nostrat <- CreateTableOne(vars = tabvars, data = mci, test = F)
tab1nostratprint <- as.data.frame(print(tab1_nostrat, showAllLevels = T))
tab <- cbind.data.frame(tab1nostratprint, tab1print)
View(tab)
View(tab)
colnames(tab)
tab <- tab[, -3]
colnames(tab)
colnames(tab) <- c("", "Overall", "Did not develop dementia/MCI during study",
"Developed dementia/MCI during study")
setwd("C:/Repositories/bios6623-johnsra3/Project3/Reports")
write.csv(tab, "Table1Demographics.csv")
library(dplyr)
library(ggplot2)
mci <- read.csv("C:/Users/johnsra3/Documents/School/AdvancedData/Project3Data.csv", header = T)
allmissing <- mci[is.na(mci$blockR) == T & is.na(mci$animals) == T & is.na(mci$logmemI) == T & is.na(mci$logmemII) == T, ]
mci <- mci[!rownames(mci) %in% rownames(allmissing), ]
blockr <- mci[, c(1, 2, 3, 4, 5, 6, 10, 11)]
animals <- mci[, c(1, 2, 3, 4, 5, 7, 10, 11)]
logmem1 <- mci[, c(1, 2, 3, 4, 5, 8, 10, 11)]
logmem2 <- mci[, c(1, 2, 3, 4, 5, 9, 10, 11)]
blockr <- blockr[is.na(blockr$blockR) == F, ]
animals <- animals[is.na(animals$animals) == F, ]
logmem1 <- logmem1[is.na(logmem1$logmemI) == F, ]
logmem2 <- logmem2[is.na(logmem2$logmemII) == F, ]
blockr_rows <- as.data.frame(table(blockr$id))
animals_rows <- as.data.frame(table(animals$id))
logmem1_rows <- as.data.frame(table(logmem1$id))
logmem2_rows <- as.data.frame(table(logmem2$id))
colnames(blockr_rows) <- c("id", "num_obs")
colnames(animals_rows) <- c("id", "num_obs")
colnames(logmem1_rows) <- c("id", "num_obs")
colnames(logmem2_rows) <- c("id", "num_obs")
blockr <- merge(blockr, blockr_rows, by = "id")
animals <- merge(animals, animals_rows, by = "id")
logmem1 <- merge(logmem1, logmem1_rows, by = "id")
logmem2 <- merge(logmem2, logmem2_rows, by = "id")
#Only include indivs w/ 3+ visits
blockr <- blockr[blockr$num_obs > 2, ]
animals <- animals[animals$num_obs > 2, ]
logmem1 <- logmem1[logmem1$num_obs > 2, ]
logmem2 <- logmem2[logmem2$num_obs > 2, ]
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind)))
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtile(name = "BlockR")
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind)))
class(mci$age)
class(mci$blockR)
class(blockr$age)
class(blockr$blockR)
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind)))
geom_line()
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line()
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line()
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtile(name = "BlockR")
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtile(name = "BlockR")
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle(name = "BlockR")
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle("BlockR")
ggplot(data = animals, aes(x = age, y = animals, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Animal category fluency score") +
ggtitle("Animals")
ggplot(data = logmem1, aes(x = age, y = logmemI, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 1") +
ggtitle("LogMemI")
ggplot(data = logmem2, aes(x = age, y = logmemII, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 2") +
ggtitle("LogMemII")
par(mfrow = c(2, 2))
#blockr
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle("BlockR")
#animals
ggplot(data = animals, aes(x = age, y = animals, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Animal category fluency score") +
ggtitle("Animals")
#logmem1
ggplot(data = logmem1, aes(x = age, y = logmemI, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 1") +
ggtitle("LogMemI")
#logmem2
ggplot(data = logmem2, aes(x = age, y = logmemII, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 2") +
ggtitle("LogMemII")
library(dplyr)
library(ggplot2)
mci <- read.csv("C:/Users/johnsra3/Documents/School/AdvancedData/Project3Data.csv", header = T)
#=============================================================#
# Remove rows that are completely NA for outcomes
#=============================================================#
allmissing <- mci[is.na(mci$blockR) == T & is.na(mci$animals) == T & is.na(mci$logmemI) == T & is.na(mci$logmemII) == T, ]
mci <- mci[!rownames(mci) %in% rownames(allmissing), ]
blockr <- mci[, c(1, 2, 3, 4, 5, 6, 10, 11)]
animals <- mci[, c(1, 2, 3, 4, 5, 7, 10, 11)]
logmem1 <- mci[, c(1, 2, 3, 4, 5, 8, 10, 11)]
logmem2 <- mci[, c(1, 2, 3, 4, 5, 9, 10, 11)]
#Remove missing obs for each outcome
blockr <- blockr[is.na(blockr$blockR) == F, ]
animals <- animals[is.na(animals$animals) == F, ]
logmem1 <- logmem1[is.na(logmem1$logmemI) == F, ]
logmem2 <- logmem2[is.na(logmem2$logmemII) == F, ]
#Tables of frequencies for each ID
blockr_rows <- as.data.frame(table(blockr$id))
animals_rows <- as.data.frame(table(animals$id))
logmem1_rows <- as.data.frame(table(logmem1$id))
logmem2_rows <- as.data.frame(table(logmem2$id))
colnames(blockr_rows) <- c("id", "num_obs")
colnames(animals_rows) <- c("id", "num_obs")
colnames(logmem1_rows) <- c("id", "num_obs")
colnames(logmem2_rows) <- c("id", "num_obs")
blockr <- merge(blockr, blockr_rows, by = "id")
animals <- merge(animals, animals_rows, by = "id")
logmem1 <- merge(logmem1, logmem1_rows, by = "id")
logmem2 <- merge(logmem2, logmem2_rows, by = "id")
#Only include indivs w/ 3+ visits
blockr <- blockr[blockr$num_obs > 2, ]
animals <- animals[animals$num_obs > 2, ]
logmem1 <- logmem1[logmem1$num_obs > 2, ]
logmem2 <- logmem2[logmem2$num_obs > 2, ]
#=============================================================#
# Explore outcome data
#=============================================================#
summary(blockr$blockR)
hist(blockr$blockR)
summary(animals$animals)
hist(animals$animals)
summary(logmem1$logmemI)
hist(logmem1$logmemI)
summary(logmem2$logmemII)
hist(logmem2$logmemII)
#=============================================================#
# Spaghetti plots- exploration of trajectory
#=============================================================#
par(mfrow = c(2, 2))
#blockr
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle("BlockR")
#animals
ggplot(data = animals, aes(x = age, y = animals, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Animal category fluency score") +
ggtitle("Animals")
#logmem1
ggplot(data = logmem1, aes(x = age, y = logmemI, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 1") +
ggtitle("LogMemI")
#logmem2
ggplot(data = logmem2, aes(x = age, y = logmemII, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 2") +
ggtitle("LogMemII")
par(mfrow = c(2, 2))
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle("BlockR")
install.packages(gridExtra)
install.packages("gridExtra")
library(gridExtra)
p1 <- ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle("BlockR")
#animals
p2 <- ggplot(data = animals, aes(x = age, y = animals, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Animal category fluency score") +
ggtitle("Animals")
#logmem1
p3 <- ggplot(data = logmem1, aes(x = age, y = logmemI, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 1") +
ggtitle("LogMemI")
#logmem2
p4 <- ggplot(data = logmem2, aes(x = age, y = logmemII, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 2") +
ggtitle("LogMemII")
grid.arrange(p1, p2, p3, p4, ncol = 2)
mytheme <- theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal") +
scale_fill_discrete("")
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal") +
scale_fill_discrete("") +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle("BlockR")
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal") +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
labs(fill = "Developed dementia/MCI") +
ggtitle("BlockR")
ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal") +
scale_color_discrete("Developed dementia/MCI") +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle("BlockR")
p1 <- ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal") +
scale_color_discrete("Developed dementia/MCI") +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle("BlockR")
p1 <-ggplot(data = blockr, aes(x = age, y = blockR, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal") +
scale_color_discrete("Developed dementia/MCI") +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Block design score") +
ggtitle("BlockR")
#animals
p2 <- ggplot(data = animals, aes(x = age, y = animals, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal") +
scale_color_discrete("Developed dementia/MCI") +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Animal category fluency score") +
ggtitle("Animals")
#logmem1
p3 <- ggplot(data = logmem1, aes(x = age, y = logmemI, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal") +
scale_color_discrete("Developed dementia/MCI") +
scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 1") +
ggtitle("LogMemI")
#logmem2
p4 <- ggplot(data = logmem2, aes(x = age, y = logmemII, group = id, col = as.factor(demind))) +
geom_line() +
theme_classic() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal") +
scale_color_discrete("Developed dementia/MCI") +scale_x_continuous(name = "Age") +
scale_y_continuous(name = "Logical memory score 2") +
ggtitle("LogMemII")
grid.arrange(p1, p2, p3, p4, ncol = 2)
