for(i in 2:nrow(pex)){
lengthbt[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt[i, 2] <- NA
}
}
lengthbt <- as.data.frame(lengthbt)
colnames(lengthbt) <- c("cffidno1", "lengthbtpex")
pex_gr0 <- cbind.data.frame(pex, lengthbt)
pex_gr0 <- pex_gr0[, -which(colnames(pex_gr0) == "cffidno1")]
summary(pex_gr0$lengthbtpex)
#Delete duplicate rows (negative lengthbt)
pex_gr0 <- pex_gr0[-which(pex_gr0$lengthbtpex < 0), ]
#Note: do NOT delete lengths == 0 in case these are starting value rows
#(they would have health info that we may need later on)
pex <- pex_gr0
rm(pex_gr0)
#Looking at relationship with PREVIOUS EPISODE (t/f 1st is an NA)
pex$lessthan7 <- ifelse(pex$lengthbtpex <= 7, 1, 0)
#Note: there are 1606 episodes w/ length <=7 that need to be combined
pex$ident <- NA
#Run loop to show if current row is identical to previous row
for(i in 2:nrow(pex)){
if(identical(pex$cffidno[i-1], pex$cffidno[i])){
pex$ident[i] <- 1
} else {
pex$ident[i] <- 0
}
}
#Create variable to show if episode was combined into another row
pex$combined <- NA
#Create test data set to compare to once loop is run
compare_test <- pex
#Run loop to combine episodes where length in b/t is <=7 days w/i an ID
for(i in 2:nrow(pex)){
if(pex$ident[i] == 1 & pex$lessthan7[i] == 1 & !is.na(pex$lessthan7[i])){
pex$EndAge_day[i-1] <- pex$EndAge_day[i]
pex$ce_fvc_end[i-1] <- pex$ce_fvc_end[i]
pex$ce_fev1_end[i-1] <- pex$ce_fev1_end[i]
pex$ce_fef25_end[i-1] <- pex$ce_fef25_end[i]
pex$combined[i] <- 1
} else {
pex$combined[i] <- 0
}
}
#Remove rows whose information was combined into the previous episode
pex <- pex[pex$combined != 1, ]
#Recalculate length bt episodes to replace old length
lengthbt_new <- matrix(data = NA, nrow = nrow(pex), ncol = 2)
lengthbt_new[1, 2] <- NA
pex <- pex[order(pex$cffidno), ]
for(i in 2:nrow(pex)){
lengthbt_new[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt_new[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt_new[i, 2] <- NA
}
}
lengthbt_new <- as.data.frame(lengthbt_new)
colnames(lengthbt_new) <- c("cffidno1", "lengthbtpex")
pex <- pex[, -which(colnames(pex) == "lengthbtpex")]
pex <- pex[, -which(colnames(pex) == "lessthan7")]
pex <- pex[, -which(colnames(pex) == "ident")]
pex <- pex[, -which(colnames(pex) == "combined")]
pex_new <- cbind.data.frame(pex, lengthbt_new)
pex_new <- pex_new[, -which(colnames(pex_new) == "cffidno1")]
pex <- pex_new
rm(pex_new)
summary(pex$lengthbtpex)
hist(pex$lengthbtpex, breaks = 20)
pex$diff_fvc <- pex$ce_fvc_end - pex$ce_fvc_begin
pex$diff_fev1 <- pex$ce_fev1_end - pex$ce_fev1_begin
pex$diff_fef25 <- pex$ce_fef25_end - pex$ce_fef25_begin
pex$ep_length <- pex$EndAge_day - pex$StartAge_day
pex$ce_fef25_begin[pex$ce_fef25_begin == 0] <- NA
pex$ce_fev1_begin[pex$ce_fev1_begin == 0] <- NA
pex$ce_fvc_begin[pex$ce_fvc_begin == 0] <- NA
library(knitr)
pex_alldata <- read.csv("C:/Users/johnsra3/Documents/Thesis/DataRaw/Episode.csv", header = T)
pex <- pex_alldata[pex_alldata$rsn_pe == 1, ]
pex$StartAge_day <- pex$StartAge * 365
pex$EndAge_day <- pex$EndAge * 365
pex <- pex[, -which(colnames(pex) == "StartAge")]
pex <- pex[, -which(colnames(pex) == "EndAge")]
pex <- pex[, -which(colnames(pex) == "rsn_pe")]
pex <- pex[, -which(colnames(pex) == "ce_meas_age_begin")]
pex <- pex[, -which(colnames(pex) == "ce_meas_age_end")]
lengthbt <- matrix(data = NA, nrow = nrow(pex), ncol = 2)
lengthbt[1, 2] <- NA
pex <- pex[order(pex$cffidno), ]
for(i in 2:nrow(pex)){
lengthbt[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt[i, 2] <- NA
}
}
lengthbt <- as.data.frame(lengthbt)
colnames(lengthbt) <- c("cffidno1", "lengthbtpex")
pex_gr0 <- cbind.data.frame(pex, lengthbt)
pex_gr0 <- pex_gr0[, -which(colnames(pex_gr0) == "cffidno1")]
pex <- pex_gr0
rm(pex_gr0)
pex$ident <- NA
for(i in 2:nrow(pex)){
if(identical(pex$cffidno[i-1], pex$cffidno[i])){
pex$ident[i] <- 1
} else {
pex$ident[i] <- 0
}
}
pex$lessthan7 <- ifelse(pex$lengthbtpex <= 7, 1, 0)
pex$combined <- NA
compare_test <- pex
for(i in 2:nrow(pex)){
if(pex$ident[i] == 1 & pex$lessthan7[i] == 1 & !is.na(pex$lessthan7[i])){
pex$EndAge_day[i-1] <- pex$EndAge_day[i]
pex$ce_fvc_end[i-1] <- pex$ce_fvc_end[i]
pex$ce_fev1_end[i-1] <- pex$ce_fev1_end[i]
pex$ce_fef25_end[i-1] <- pex$ce_fef25_end[i]
pex$combined[i] <- 1
} else {
pex$combined[i] <- 0
}
}
pex <- pex[pex$combined != 1, ]
lengthbt_new <- matrix(data = NA, nrow = nrow(pex), ncol = 2)
lengthbt_new[1, 2] <- NA
pex <- pex[order(pex$cffidno), ]
for(i in 2:nrow(pex)){
lengthbt_new[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt_new[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt_new[i, 2] <- NA
}
}
lengthbt_new <- as.data.frame(lengthbt_new)
colnames(lengthbt_new) <- c("cffidno1", "lengthbtpex")
pex <- pex[, -which(colnames(pex) == "lengthbtpex")]
pex <- pex[, -which(colnames(pex) == "lessthan7")]
pex <- pex[, -which(colnames(pex) == "ident")]
pex <- pex[, -which(colnames(pex) == "combined")]
pex_new <- cbind.data.frame(pex, lengthbt_new)
pex_new <- pex_new[, -which(colnames(pex_new) == "cffidno1")]
pex <- pex_new
rm(pex_new)
pex$diff_fvc <- pex$ce_fvc_end - pex$ce_fvc_begin
pex$diff_fev1 <- pex$ce_fev1_end - pex$ce_fev1_begin
pex$diff_fef25 <- pex$ce_fef25_end - pex$ce_fef25_begin
pex$ep_length <- pex$EndAge_day - pex$StartAge_day
pex$ce_fef25_begin[pex$ce_fef25_begin == 0] <- NA
pex$ce_fev1_begin[pex$ce_fev1_begin == 0] <- NA
pex$ce_fvc_begin[pex$ce_fvc_begin == 0] <- NA
age_0 <- pex[which(pex$StartAge_day == 0), ]
**Table 2.** This figure displays the minimum, 25th percentile, median, 75th percentile, and maximum values of lengths of the `r nrow(pex)` episodes, after clinically defining that episodes must be at least 7 days apart to be considered separate episodes.
```{r, echo = FALSE}
lengthtab <- matrix(data = NA, nrow = 5, ncol = 2)
colnames(lengthtab) <- c("", "")
lengthtab[1:5, 1] <- c("Minimum", "25th percentile", "Median", "75th percentile", "Maximum")
lengthtab[1:5, 2] <- round(fivenum(pex$ep_length), 4)
kable(lengthtab)
over30days <- pex[pex$ep_length >= 30, c(which(colnames(pex) == "cffidno"),
which(colnames(pex) == "ep_length"))]
over30days <- over30days[is.na(over30days$ep_length) == F, ]
colnames(over30days) <- c("Patient ID", "Episode Length (days)")
test <- as.data.frame(table(over30days$cffidno))
length(unique(over30days$`Patient ID`))
names(test)
View(test)
test <- as.data.frame(table(over30days$`Patient ID`))
View(test)
colnames(test) <- c("cffidno", "Freq")
library(knitr)
pex_alldata <- read.csv("C:/Users/johnsra3/Documents/Thesis/DataRaw/Episode.csv", header = T)
pex <- pex_alldata[pex_alldata$rsn_pe == 1, ]
pex$StartAge_day <- pex$StartAge * 365
pex$EndAge_day <- pex$EndAge * 365
pex <- pex[, -which(colnames(pex) == "StartAge")]
pex <- pex[, -which(colnames(pex) == "EndAge")]
pex <- pex[, -which(colnames(pex) == "rsn_pe")]
pex <- pex[, -which(colnames(pex) == "ce_meas_age_begin")]
pex <- pex[, -which(colnames(pex) == "ce_meas_age_end")]
lengthbt <- matrix(data = NA, nrow = nrow(pex), ncol = 2)
lengthbt[1, 2] <- NA
pex <- pex[order(pex$cffidno), ]
for(i in 2:nrow(pex)){
lengthbt[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt[i, 2] <- NA
}
}
lengthbt <- as.data.frame(lengthbt)
colnames(lengthbt) <- c("cffidno1", "lengthbtpex")
pex_gr0 <- cbind.data.frame(pex, lengthbt)
pex_gr0 <- pex_gr0[, -which(colnames(pex_gr0) == "cffidno1")]
pex <- pex_gr0
rm(pex_gr0)
pex$ident <- NA
for(i in 2:nrow(pex)){
if(identical(pex$cffidno[i-1], pex$cffidno[i])){
pex$ident[i] <- 1
} else {
pex$ident[i] <- 0
}
}
pex$lessthan7 <- ifelse(pex$lengthbtpex <= 7, 1, 0)
pex$combined <- NA
compare_test <- pex
for(i in 2:nrow(pex)){
if(pex$ident[i] == 1 & pex$lessthan7[i] == 1 & !is.na(pex$lessthan7[i])){
pex$EndAge_day[i-1] <- pex$EndAge_day[i]
pex$ce_fvc_end[i-1] <- pex$ce_fvc_end[i]
pex$ce_fev1_end[i-1] <- pex$ce_fev1_end[i]
pex$ce_fef25_end[i-1] <- pex$ce_fef25_end[i]
pex$combined[i] <- 1
} else {
pex$combined[i] <- 0
}
}
pex <- pex[pex$combined != 1, ]
lengthbt_new <- matrix(data = NA, nrow = nrow(pex), ncol = 2)
lengthbt_new[1, 2] <- NA
pex <- pex[order(pex$cffidno), ]
for(i in 2:nrow(pex)){
lengthbt_new[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt_new[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt_new[i, 2] <- NA
}
}
lengthbt_new <- as.data.frame(lengthbt_new)
colnames(lengthbt_new) <- c("cffidno1", "lengthbtpex")
pex <- pex[, -which(colnames(pex) == "lengthbtpex")]
pex <- pex[, -which(colnames(pex) == "lessthan7")]
pex <- pex[, -which(colnames(pex) == "ident")]
pex <- pex[, -which(colnames(pex) == "combined")]
pex_new <- cbind.data.frame(pex, lengthbt_new)
pex_new <- pex_new[, -which(colnames(pex_new) == "cffidno1")]
pex <- pex_new
rm(pex_new)
pex$diff_fvc <- pex$ce_fvc_end - pex$ce_fvc_begin
pex$diff_fev1 <- pex$ce_fev1_end - pex$ce_fev1_begin
pex$diff_fef25 <- pex$ce_fef25_end - pex$ce_fef25_begin
pex$ep_length <- pex$EndAge_day - pex$StartAge_day
pex$ce_fef25_begin[pex$ce_fef25_begin == 0] <- NA
pex$ce_fev1_begin[pex$ce_fev1_begin == 0] <- NA
pex$ce_fvc_begin[pex$ce_fvc_begin == 0] <- NA
age_0 <- pex[which(pex$StartAge_day == 0), ]
lengthtab <- matrix(data = NA, nrow = 5, ncol = 2)
colnames(lengthtab) <- c("", "")
lengthtab[1:5, 1] <- c("Minimum", "25th percentile", "Median", "75th percentile", "Maximum")
lengthtab[1:5, 2] <- round(fivenum(pex$ep_length), 4)
kable(lengthtab)
over30days <- pex[pex$ep_length >= 30, c(which(colnames(pex) == "cffidno"),
which(colnames(pex) == "ep_length"))]
over30days <- over30days[is.na(over30days$ep_length) == F, ]
colnames(over30days) <- c("Patient ID", "Episode Length (days)")
test <- as.data.frame(table(over30days$`Patient ID`))
colnames(test) <- c("cffidno", "Freq")
names(over309)
names(over30days)
names(over30days)
over30days$`Patient ID`
unique(over30days$`Patient ID`)
length(unique(over30days$`Patient ID`))
min(test$Freq)
max(test$Freq)
mean(test$Freq)
median(test$Freq)
install.packages("nlme")
?lme
library(nlme)
?lme
mean <- 0
var <- 1000
sd <- sqrt(var)
x <- seq(-4,4,length=1000)*sd + mean
hx <- dnorm(x,mean,sd)
plot(hx)
plot(hx ~ x)
plot(hx ~ x, pch = ".")
abline(h = -83.2590)
abline(x = -83.2590)
abline(v = -83.2590)
abline(v = -81.7680)
sqrt(43560)
sqrt(304920)
library(knitr)
library(data.table)
setwd("//proton/EJCgroupStudentThesesJohnsonR/Data/DataSource")
enroll <- read.csv("Enrollment.csv", header = T)
epicenc <- read.csv("Epic_Encounters.csv", header = T)
regenc <- read.csv("Reg_Encounters.csv", header = T)
setwd("//proton/EJCgroupStudentThesesJohnsonR/Data/DataCreated")
pex_alldata <- read.csv("C:/Users/johnsra3/Documents/Thesis/DataRaw/Episode.csv", header = T)
pex <- pex_alldata[pex_alldata$rsn_pe == 1, ]
pex$StartAge_day <- pex$StartAge * 365
pex$EndAge_day <- pex$EndAge * 365
pex <- pex[, -which(colnames(pex) == "StartAge")]
pex <- pex[, -which(colnames(pex) == "EndAge")]
pex <- pex[, -which(colnames(pex) == "rsn_pe")]
pex <- pex[, -which(colnames(pex) == "ce_meas_age_begin")]
pex <- pex[, -which(colnames(pex) == "ce_meas_age_end")]
lengthbt <- matrix(data = NA, nrow = nrow(pex), ncol = 2)
lengthbt[1, 2] <- NA
pex <- pex[order(pex$cffidno), ]
for(i in 2:nrow(pex)){
lengthbt[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt[i, 2] <- NA
}
}
lengthbt <- as.data.frame(lengthbt)
colnames(lengthbt) <- c("cffidno1", "lengthbtpex")
pex_gr0 <- cbind.data.frame(pex, lengthbt)
pex_gr0 <- pex_gr0[, -which(colnames(pex_gr0) == "cffidno1")]
pex <- pex_gr0
rm(pex_gr0)
pex$ident <- NA
for(i in 2:nrow(pex)){
if(identical(pex$cffidno[i-1], pex$cffidno[i])){
pex$ident[i] <- 1
} else {
pex$ident[i] <- 0
}
}
pex$lessthan7 <- ifelse(pex$lengthbtpex <= 7, 1, 0)
pex$combined <- NA
compare_test <- pex
for(i in 2:nrow(pex)){
if(pex$ident[i] == 1 & pex$lessthan7[i] == 1 & !is.na(pex$lessthan7[i])){
pex$EndAge_day[i-1] <- pex$EndAge_day[i]
pex$ce_fvc_end[i-1] <- pex$ce_fvc_end[i]
pex$ce_fev1_end[i-1] <- pex$ce_fev1_end[i]
pex$ce_fef25_end[i-1] <- pex$ce_fef25_end[i]
pex$combined[i] <- 1
} else {
pex$combined[i] <- 0
}
}
pex <- pex[pex$combined != 1, ]
lengthbt_new <- matrix(data = NA, nrow = nrow(pex), ncol = 2)
lengthbt_new[1, 2] <- NA
pex <- pex[order(pex$cffidno), ]
for(i in 2:nrow(pex)){
lengthbt_new[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt_new[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt_new[i, 2] <- NA
}
}
lengthbt_new <- as.data.frame(lengthbt_new)
colnames(lengthbt_new) <- c("cffidno1", "lengthbtpex")
pex <- pex[, -which(colnames(pex) == "lengthbtpex")]
pex <- pex[, -which(colnames(pex) == "lessthan7")]
pex <- pex[, -which(colnames(pex) == "ident")]
pex <- pex[, -which(colnames(pex) == "combined")]
pex_new <- cbind.data.frame(pex, lengthbt_new)
pex_new <- pex_new[, -which(colnames(pex_new) == "cffidno1")]
pex <- pex_new
rm(pex_new)
pex$diff_fvc <- pex$ce_fvc_end - pex$ce_fvc_begin
pex$diff_fev1 <- pex$ce_fev1_end - pex$ce_fev1_begin
pex$diff_fef25 <- pex$ce_fef25_end - pex$ce_fef25_begin
pex$ep_length <- pex$EndAge_day - pex$StartAge_day
pex$ce_fef25_begin[pex$ce_fef25_begin == 0] <- NA
pex$ce_fev1_begin[pex$ce_fev1_begin == 0] <- NA
pex$ce_fvc_begin[pex$ce_fvc_begin == 0] <- NA
age_0 <- pex[which(pex$StartAge_day == 0), ]
#############
age_initial <- cbind.data.frame(enroll$cffidno, enroll$ConsentAge)
age_initial <- age_initial[order(age_initial$`enroll$cffidno`), ]
colnames(age_initial) <- c("cffidno", "ConsentAge")
regenc_ages <- regenc[ , c(which(colnames(regenc) == "cffidno"), which(colnames(regenc) == "VisitAge"))]
regenc_ages <- as.data.table(regenc_ages)
regenc_ages <- setDT(regenc_ages)[, .SD[which.max(VisitAge)], by = cffidno]
regenc_ages$source <- "registry"
epicenc_ages <- epicenc[, c(which(colnames(epicenc) == "cffidno"), which(colnames(epicenc) == "VisitAge"))]
epicenc_ages <- as.data.table(epicenc_ages)
epicenc_ages <- setDT(epicenc_ages)[, .SD[which.max(VisitAge)], by = cffidno]
epicenc_ages$source <- "epic"
endages <- rbind.data.frame(regenc_ages, epicenc_ages)
endages <- as.data.table(endages)
endages <- setDT(endages)[, .SD[which.max(VisitAge)], by = cffidno]
age_initial <- age_initial[order(age_initial$cffidno), ]
endages <- endages[order(endages$cffidno), ]
ages <- merge(age_initial, endages, by = "cffidno")
colnames(ages)[3] <- "LastVisitAge"
#Create follow-up variable
ages$followup <- ages$LastVisitAge - ages$ConsentAge
pex <- pex[pex$ep_length < 300, ]
hist(pex$ep_length, breaks = 30, main = "Histogram of Lengths of\nClinically Defined Episodes",
xlab = "Length of Episode (days)")
lengthtab <- matrix(data = NA, nrow = 5, ncol = 2)
colnames(lengthtab) <- c("", "")
lengthtab[1:5, 1] <- c("Minimum", "25th percentile", "Median", "75th percentile", "Maximum")
lengthtab[1:5, 2] <- round(fivenum(pex$ep_length), 4)
kable(lengthtab)
setwd("//proton/EJCgroupStudentThesesJohnsonR/Data/DataCreated")
freqpex <- read.csv("NumPexPerIndiv.csv", header = T)
freqpex <- freqpex[, -1]
freqpex <- merge(freqpex, ages, by = "cffidno")
mean(freqpex$followup)
mean(freqpex$Freq)
var(freqpex$Freq)
library(haven)
setwd("~/School/AdvancedData")
vadata <- read_sas("~/School/AdvancedData/vadata2.sas7bdat")
#==========================================================#
# Divide into different data sets (will use later)
#==========================================================#
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata <- vadata[-which(vadata$proced == 2), ]
#bmi- look at unusually high/low vals
(lowbmi <- vadata[vadata$bmi < 15 & is.na(vadata$bmi) == F, ])
#Row 1, 3, 5, 6, 7, 8 look like weight is in kg (not lbs)
#Row 4 looks like BMI calculation issue
#Row 2 is ???
(lowbmi <- lowbmi[-c(2, 4), ])
lowbmi$weight_lbs <- lowbmi$weight * 2.2
lowbmi$bmi_calc <- lowbmi$weight_lbs/(lowbmi$height^2) * 703
#BMI and weight in lbs all seem reasonable now for these
(lowbmi_row4 <- vadata[vadata$bmi < 3 & is.na(vadata$bmi) == F, ])
(lowbmi_row4$bmi_calc <- lowbmi_row4$weight/(lowbmi_row4$height^2) * 703)
vadata <- vadata[-which(vadata$proced == 2), ]
(lowbmi <- vadata[vadata$bmi < 15 & is.na(vadata$bmi) == F, ])
(lowbmi <- lowbmi[-c(4), ])
(lowbmi <- vadata[vadata$bmi < 15 & is.na(vadata$bmi) == F, ])
library(haven)
setwd("~/School/AdvancedData")
vadata <- read_sas("~/School/AdvancedData/vadata2.sas7bdat")
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata <- vadata[-which(vadata$proced == 2), ]
(lowbmi <- vadata[vadata$bmi < 15 & is.na(vadata$bmi) == F, ])
(lowbmi <- lowbmi[-4, ])
lowbmi$weight_lbs <- lowbmi$weight * 2.2
lowbmi$bmi_calc <- lowbmi$weight_lbs/(lowbmi$height^2) * 703
(lowbmi_row4 <- vadata[vadata$bmi < 3 & is.na(vadata$bmi) == F, ])
(lowbmi_row4$bmi_calc <- lowbmi_row4$weight/(lowbmi_row4$height^2) * 703)
(highbmi <- vadata[vadata$bmi > 50 & is.na(vadata$bmi) == F, ])
(highbmi$bmi_calc <- highbmi$weight/(highbmi$height^2) * 703)
vadata <- vadata[vadata$bmi > 15 & vadata$bmi < 50, ]
lowbmi$bmi <- lowbmi$bmi_calc
lowbmi$weight <- lowbmi$weight_lbs
lowbmi <- lowbmi[, -c(which(colnames(lowbmi) == "bmi_calc"),
which(colnames(lowbmi) == "weight_lbs"))]
lowbmi_row4$bmi <- lowbmi_row4$bmi_calc
lowbmi_row4 <- lowbmi_row4[, -which(colnames(lowbmi_row4) == "bmi_calc")]
highbmi$bmi <- highbmi$bmi_calc
vadata <- rbind.data.frame(vadata, lowbmi, lowbmi_row4, highbmi)
highbmi <- highbmi[, -which(colnames(highbmi) == "bmi_calc")]
vadata <- rbind.data.frame(vadata, lowbmi, lowbmi_row4, highbmi)
tabdata <- vadata
tabdata <- tabdata[, -c(which(colnames(tabdata) == "weight"),
which(colnames(tabdata) == "height"),
which(colnames(tabdata) == "sixmonth"))]
names(tabdata)
rows <- 1 + 1 + 3 + 6 + 2 + 3 + 1
tab <- matrix(data = NA, nrow = rows, ncol = 2)
colnames(tab) <- c("", "")
tab[1, 1] <- "Hospitals (n)"
tab[1, 2] <- length(unique(tabdata$hospcode))
tab[2, 1] <- "Patients undergoing heart surgery (n)"
tab[2, 2] <- nrow(tabdata)
tab[3, 1] <- "Procedure (n (%))"
tab[4:5, 1] <- c("Valve surgery", "CABG surgery")
tab[4, 2] <- paste(nrow(tabdata[tabdata$proced == 0, ]), paste("(",
round(nrow(tabdata[tabdata$proced == 0, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[5, 2] <- paste(nrow(tabdata[tabdata$proced == 1, ]), paste("(",
round(nrow(tabdata[tabdata$proced == 1, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[6, 1] <- "ASA (n (%))"
tab[7:12, 1] <- c("1 = good health", "2", "3", "4", "5 = near death", "Missing")
tab[7, 2] <- paste(nrow(tabdata[tabdata$asa == 1 & is.na(tabdata$asa) == F, ]), paste("(",
round(nrow(tabdata[tabdata$asa == 1 & is.na(tabdata$asa) == F, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[8, 2] <- paste(nrow(tabdata[tabdata$asa == 2 & is.na(tabdata$asa) == F, ]), paste("(",
round(nrow(tabdata[tabdata$asa == 2 & is.na(tabdata$asa) == F, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[9, 2] <- paste(nrow(tabdata[tabdata$asa == 3 & is.na(tabdata$asa) == F, ]), paste("(",
round(nrow(tabdata[tabdata$asa == 3 & is.na(tabdata$asa) == F, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[10, 2] <- paste(nrow(tabdata[tabdata$asa == 4 & is.na(tabdata$asa) == F, ]), paste("(",
round(nrow(tabdata[tabdata$asa == 4 & is.na(tabdata$asa) == F, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[11, 2] <- paste(nrow(tabdata[tabdata$asa == 5 & is.na(tabdata$asa) == F, ]), paste("(",
round(nrow(tabdata[tabdata$asa == 5 & is.na(tabdata$asa) == F, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[12, 2] <- paste(nrow(tabdata[is.na(tabdata$asa) == T, ]), paste("(",
round(nrow(tabdata[is.na(tabdata$asa) == T, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[13:14, 1] <- c("BMI (median (IQR))", "Missing (n (%))")
tab[13, 2] <- paste(round(median(tabdata$bmi, na.rm = T), 2), paste("(",
round(IQR(tabdata$bmi, na.rm = T), 2), ")", sep = ""))
tab[14, 2] <- paste(nrow(tabdata[is.na(tabdata$bmi) == T, ]), paste("(",
round(nrow(tabdata[is.na(tabdata$bmi) == T, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[15:16, 1] <- c("Albumin (median (IQR))", "Missing (n (%))")
tab[15, 2] <- paste(round(median(tabdata$albumin, na.rm = T), 2), paste("(",
round(IQR(tabdata$albumin, na.rm = T), 2), ")", sep = ""))
tab[16, 2] <- paste(nrow(tabdata[is.na(tabdata$albumin) == T, ]), paste("(",
round(nrow(tabdata[is.na(tabdata$albumin) == T, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
tab[17, 1] <- "30 day mortality (n (%))"
tab[17, 2] <- paste(nrow(tabdata[tabdata$death30 == 1 & is.na(tabdata$asa) == F, ]), paste("(",
round(nrow(tabdata[tabdata$death30 == 1 & is.na(tabdata$asa) == F, ])/nrow(tabdata) * 100, 2), ")", sep = ""))
setwd("C:/Repositories/bios6623-johnsra3/Project1/Reports")
write.csv(tab, "TableOverallCharacteristics.csv")
