#Extract fitted values from summary of model2
(int <- summary(model2)$coefficients[1, 1])
(pred_proced <- summary(model2)$coefficients[2, 1])
(pred_asa <- summary(model2)$coefficients[3, 1])
(pred_bmi <- summary(model2)$coefficients[4, 1])
#Create XB column in comp_rec (last 6 month period only)
comp_rec$XB <- int + pred_proced*comp_rec$proced + pred_asa*comp_rec$asa_indic + pred_bmi*comp_rec$bmi
#Create predicted p column in comp
comp_rec$pred_p <- inv.logit(comp_rec$XB)
library(boot)
comp_rec$pred_p <- inv.logit(comp_rec$XB)
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
boot.res <- read.csv("BootstrapResults_raw.csv", header = T)
boot.res <- boot.res[, -1]
tab2 <- matrix(data = NA, nrow = length(unique(rec$hospcode)), ncol = 5)
colnames(tab2) <- c("Hospital", "Patients died", "Patients in surgery", "Percent died",
"Predicted percent died for last 6 months (population-adjusted)")
rec <- rec[order(rec$hospcode), c(which(colnames(rec) == "hospcode"),
which(colnames(rec) == "death30"))]
tab2[1:44, 1] <- unique(rec$hospcode)
tab2[1:44, 2] <- aggregate(rec$death30, list(rec$hospcode), sum)[, 2]
tab2[1:44, 3] <- aggregate(rec$death30, list(rec$hospcode), length)[, 2]
tab2[1:44, 4] <- round(tab2[, 2]/tab2[, 3] * 100, 2)
hosp1_29 <- as.list(unique(comp_rec$hospcode)[1:29])
p1_29 <- as.data.frame(comp_rec[comp_rec$hospcode %in% hosp1_29, c(which(colnames(comp_rec) == "pred_p"),
which(colnames(comp_rec) == "hospcode"))])
tab2[1:29, 5] <- round(aggregate(p1_29$pred_p, list(p1_29$hospcode), mean)[, 2] * 100, 2)
hosp31_44 <- seq(from = 31, to = 44, by = 1)
p31_44 <- as.data.frame(comp_rec[comp_rec$hospcode %in% hosp31_44, c(which(colnames(comp_rec) == "pred_p"),
which(colnames(comp_rec) == "hospcode"))])
tab2[31:44, 5] <- round(aggregate(p31_44$pred_p, list(p31_44$hospcode), mean)[, 2] * 100, 2)
comp <- vadata[, c(which(colnames(vadata) == "hospcode"),
which(colnames(vadata) == "sixmonth"),
which(colnames(vadata) == "proced"),
which(colnames(vadata) == "asa_indic"),
which(colnames(vadata) == "bmi"),
which(colnames(vadata) == "death30"))]
comp <- comp[complete.cases(comp), ]
comp_rec <- comp[comp$sixmonth == 39, ]
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
#==========================================================#
# Divide into different data sets, create factor levels
#==========================================================#
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
comp <- vadata[, c(which(colnames(vadata) == "hospcode"),
which(colnames(vadata) == "sixmonth"),
which(colnames(vadata) == "proced"),
which(colnames(vadata) == "asa_indic"),
which(colnames(vadata) == "bmi"),
which(colnames(vadata) == "death30"))]
comp <- comp[complete.cases(comp), ]
comp_rec <- comp[comp$sixmonth == 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
boot.res <- read.csv("BootstrapResults_raw.csv", header = T)
boot.res <- boot.res[, -1]
tab2 <- matrix(data = NA, nrow = length(unique(rec$hospcode)), ncol = 5)
colnames(tab2) <- c("Hospital", "Patients died", "Patients in surgery", "Percent died",
"Predicted percent died for last 6 months (population-adjusted)")
rec <- rec[order(rec$hospcode), c(which(colnames(rec) == "hospcode"),
which(colnames(rec) == "death30"))]
tab2[1:44, 1] <- unique(rec$hospcode)
tab2[1:44, 2] <- aggregate(rec$death30, list(rec$hospcode), sum)[, 2]
tab2[1:44, 3] <- aggregate(rec$death30, list(rec$hospcode), length)[, 2]
tab2[1:44, 4] <- round(tab2[, 2]/tab2[, 3] * 100, 2)
hosp1_29 <- as.list(unique(comp_rec$hospcode)[1:29])
p1_29 <- as.data.frame(comp_rec[comp_rec$hospcode %in% hosp1_29, c(which(colnames(comp_rec) == "pred_p"),
which(colnames(comp_rec) == "hospcode"))])
tab2[1:29, 5] <- round(aggregate(p1_29$pred_p, list(p1_29$hospcode), mean)[, 2] * 100, 2)
hosp1_29 <- as.list(unique(comp_rec$hospcode)[1:29])
p1_29 <- as.data.frame(comp_rec[comp_rec$hospcode %in% hosp1_29, c(which(colnames(comp_rec) == "pred_p"),
which(colnames(comp_rec) == "hospcode"))])
tab2[1:29, 5] <- round(aggregate(p1_29$pred_p, list(p1_29$hospcode), mean)[, 2] * 100, 2)
View(p1_29)
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
comp <- vadata[, c(which(colnames(vadata) == "hospcode"),
which(colnames(vadata) == "sixmonth"),
which(colnames(vadata) == "proced"),
which(colnames(vadata) == "asa_indic"),
which(colnames(vadata) == "bmi"),
which(colnames(vadata) == "death30"))]
comp <- comp[complete.cases(comp), ]
comp_rec <- comp[comp$sixmonth == 39, ]
library(boot)
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
#==========================================================#
# Divide into different data sets, create factor levels
#==========================================================#
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
#==========================================================#
# Logistic regressions
#==========================================================#
#With albumin
model1 <- glm(death30 ~ proced + asa + bmi + albumin, data = vadata,
family = binomial(link = "logit"))
summary(model1)
coeff1 <- summary(model1)$coefficients
#Without albumin
model2 <- glm(death30 ~ proced + asa + bmi, data = vadata,
family = binomial(link = "logit"))
summary(model2)
coeff2 <- summary(model2)$coefficients
#Decisions do not change-- albumin can be excluded, but still report results
#p-vals change some, but not in decision; estimates only change a little
#all estimate directions are the same
#albumin is not a significant predictor
#==========================================================#
# Make tables for logistic regression results
#==========================================================#
#Model 1- with albumin
mod1tab <- matrix(data = NA, nrow = 4, ncol = 4)
colnames(mod1tab) <- c("Covariate", "Estimate", "95% CI", "p-value")
mod1tab[1:4, 1] <- c("Procedure (reference = valve surgery)", "ASA (reference = 3 or less)", "BMI", "Albumin")
e <- exp(1)
mod1tab[1, 2] <- round(e^coeff1[2, 1], 3)
mod1tab[2, 2] <- round(e^coeff1[3, 1], 3)
mod1tab[3, 2] <- round(e^coeff1[4, 1], 3)
mod1tab[4, 2] <- round(e^coeff1[5, 1], 3)
mod1tab[1, 3] <- paste(paste(round(e^(coeff1[2, 1] - 1.96*coeff1[2, 2]), 3), ",", sep = ""),
round(e^(coeff1[2, 1] + 1.96*coeff1[2, 2]), 3))
mod1tab[2, 3] <- paste(paste(round(e^(coeff1[3, 1] - 1.96*coeff1[3, 2]), 3), ",", sep = ""),
round(e^(coeff1[3, 1] + 1.96*coeff1[3, 2]), 3))
mod1tab[3, 3] <- paste(paste(round(e^(coeff1[4, 1] - 1.96*coeff1[4, 2]), 3), ",", sep = ""),
round(e^(coeff1[4, 1] + 1.96*coeff1[4, 2]), 3))
mod1tab[4, 3] <- paste(paste(round(e^(coeff1[5, 1] - 1.96*coeff1[5, 2]), 3), ",", sep = ""),
round(e^(coeff1[5, 1] + 1.96*coeff1[5, 2]), 3))
mod1tab[1, 4] <- round(coeff1[2, 4], 3)
mod1tab[2, 4] <- round(coeff1[3, 4], 3)
mod1tab[2, 4] <- "<0.001"
mod1tab[3, 4] <- round(coeff1[4, 4], 3)
mod1tab[4, 4] <- round(coeff1[5, 4], 3)
#Model 2- without albumin
mod2tab <- matrix(data = NA, nrow = 3, ncol = 4)
colnames(mod2tab) <- c("Covariate", "Estimate", "95% CI", "p-value")
mod2tab[1:3, 1] <- c("Procedure (reference = valve surgery)", "ASA (reference = 3 or less)", "BMI")
e <- exp(1)
mod2tab[1, 2] <- round(e^coeff2[2, 1], 3)
mod2tab[2, 2] <- round(e^coeff2[3, 1], 3)
mod2tab[3, 2] <- round(e^coeff2[4, 1], 3)
mod2tab[1, 3] <- paste(paste(round(e^(coeff2[2, 1] - 1.96*coeff2[2, 2]), 3), ",", sep = ""),
round(e^(coeff2[2, 1] + 1.96*coeff2[2, 2]), 3))
mod2tab[2, 3] <- paste(paste(round(e^(coeff2[3, 1] - 1.96*coeff2[3, 2]), 3), ",", sep = ""),
round(e^(coeff2[3, 1] + 1.96*coeff2[3, 2]), 3))
mod2tab[3, 3] <- paste(paste(round(e^(coeff2[4, 1] - 1.96*coeff2[4, 2]), 3), ",", sep = ""),
round(e^(coeff2[4, 1] + 1.96*coeff2[4, 2]), 3))
mod2tab[1, 4] <- round(coeff2[2, 4], 3)
mod2tab[2, 4] <- round(coeff2[3, 4], 3)
mod2tab[2, 4] <- "<0.001"
mod2tab[3, 4] <- round(coeff2[4, 4], 3)
# setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
# write.csv(mod1tab, "ModelWithAlbuminResults.csv")
# write.csv(mod2tab, "ModelWithoutAlbuminResults.csv")
#==========================================================#
# Predicted values to individuals' odds to indivs' pred p
#==========================================================#
#Need a complete case data for BMI, procedure, ASA
comp <- vadata[, c(which(colnames(vadata) == "hospcode"),
which(colnames(vadata) == "sixmonth"),
which(colnames(vadata) == "proced"),
which(colnames(vadata) == "asa_indic"),
which(colnames(vadata) == "bmi"),
which(colnames(vadata) == "death30"))]
comp <- comp[complete.cases(comp), ]
comp_rec <- comp[comp$sixmonth == 39, ]
#Extract fitted values from summary of model2
(int <- summary(model2)$coefficients[1, 1])
(pred_proced <- summary(model2)$coefficients[2, 1])
(pred_asa <- summary(model2)$coefficients[3, 1])
(pred_bmi <- summary(model2)$coefficients[4, 1])
#Create XB column in comp_rec (last 6 month period only)
comp_rec$XB <- int + pred_proced*comp_rec$proced + pred_asa*comp_rec$asa_indic + pred_bmi*comp_rec$bmi
#Create predicted p column in comp
comp_rec$pred_p <- inv.logit(comp_rec$XB)
library(boot)
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
model1 <- glm(death30 ~ proced + asa + bmi + albumin, data = vadata,
family = binomial(link = "logit"))
summary(model1)
coeff1 <- summary(model1)$coefficients
#Without albumin
model2 <- glm(death30 ~ proced + asa + bmi, data = vadata,
family = binomial(link = "logit"))
summary(model2)
coeff2 <- summary(model2)$coefficients
mod1tab <- matrix(data = NA, nrow = 4, ncol = 4)
colnames(mod1tab) <- c("Covariate", "Estimate", "95% CI", "p-value")
mod1tab[1:4, 1] <- c("Procedure (reference = valve surgery)", "ASA (reference = 3 or less)", "BMI", "Albumin")
e <- exp(1)
mod1tab[1, 2] <- round(e^coeff1[2, 1], 3)
mod1tab[2, 2] <- round(e^coeff1[3, 1], 3)
mod1tab[3, 2] <- round(e^coeff1[4, 1], 3)
mod1tab[4, 2] <- round(e^coeff1[5, 1], 3)
mod1tab[1, 3] <- paste(paste(round(e^(coeff1[2, 1] - 1.96*coeff1[2, 2]), 3), ",", sep = ""),
round(e^(coeff1[2, 1] + 1.96*coeff1[2, 2]), 3))
mod1tab[2, 3] <- paste(paste(round(e^(coeff1[3, 1] - 1.96*coeff1[3, 2]), 3), ",", sep = ""),
round(e^(coeff1[3, 1] + 1.96*coeff1[3, 2]), 3))
mod1tab[3, 3] <- paste(paste(round(e^(coeff1[4, 1] - 1.96*coeff1[4, 2]), 3), ",", sep = ""),
round(e^(coeff1[4, 1] + 1.96*coeff1[4, 2]), 3))
mod1tab[4, 3] <- paste(paste(round(e^(coeff1[5, 1] - 1.96*coeff1[5, 2]), 3), ",", sep = ""),
round(e^(coeff1[5, 1] + 1.96*coeff1[5, 2]), 3))
mod1tab[1, 4] <- round(coeff1[2, 4], 3)
mod1tab[2, 4] <- round(coeff1[3, 4], 3)
mod1tab[2, 4] <- "<0.001"
mod1tab[3, 4] <- round(coeff1[4, 4], 3)
mod1tab[4, 4] <- round(coeff1[5, 4], 3)
#Model 2- without albumin
mod2tab <- matrix(data = NA, nrow = 3, ncol = 4)
colnames(mod2tab) <- c("Covariate", "Estimate", "95% CI", "p-value")
mod2tab[1:3, 1] <- c("Procedure (reference = valve surgery)", "ASA (reference = 3 or less)", "BMI")
e <- exp(1)
mod2tab[1, 2] <- round(e^coeff2[2, 1], 3)
mod2tab[2, 2] <- round(e^coeff2[3, 1], 3)
mod2tab[3, 2] <- round(e^coeff2[4, 1], 3)
mod2tab[1, 3] <- paste(paste(round(e^(coeff2[2, 1] - 1.96*coeff2[2, 2]), 3), ",", sep = ""),
round(e^(coeff2[2, 1] + 1.96*coeff2[2, 2]), 3))
mod2tab[2, 3] <- paste(paste(round(e^(coeff2[3, 1] - 1.96*coeff2[3, 2]), 3), ",", sep = ""),
round(e^(coeff2[3, 1] + 1.96*coeff2[3, 2]), 3))
mod2tab[3, 3] <- paste(paste(round(e^(coeff2[4, 1] - 1.96*coeff2[4, 2]), 3), ",", sep = ""),
round(e^(coeff2[4, 1] + 1.96*coeff2[4, 2]), 3))
mod2tab[1, 4] <- round(coeff2[2, 4], 3)
mod2tab[2, 4] <- round(coeff2[3, 4], 3)
mod2tab[2, 4] <- "<0.001"
mod2tab[3, 4] <- round(coeff2[4, 4], 3)
# setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
# write.csv(mod1tab, "ModelWithAlbuminResults.csv")
# write.csv(mod2tab, "ModelWithoutAlbuminResults.csv")
comp <- vadata[, c(which(colnames(vadata) == "hospcode"),
which(colnames(vadata) == "sixmonth"),
which(colnames(vadata) == "proced"),
which(colnames(vadata) == "asa_indic"),
which(colnames(vadata) == "bmi"),
which(colnames(vadata) == "death30"))]
comp <- comp[complete.cases(comp), ]
comp_rec <- comp[comp$sixmonth == 39, ]
#Extract fitted values from summary of model2
(int <- summary(model2)$coefficients[1, 1])
(pred_proced <- summary(model2)$coefficients[2, 1])
(pred_asa <- summary(model2)$coefficients[3, 1])
(pred_bmi <- summary(model2)$coefficients[4, 1])
#Create XB column in comp_rec (last 6 month period only)
comp_rec$XB <- int + pred_proced*comp_rec$proced + pred_asa*comp_rec$asa_indic + pred_bmi*comp_rec$bmi
#Create predicted p column in comp
comp_rec$pred_p <- inv.logit(comp_rec$XB)
View(comp_rec)
write.csv(comp_rec, "CompleteCasesPd39Predicted.csv")
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
comp_rec <- read.csv("CompleteCasesPd39Predicted.csv", header = T)
#==========================================================#
# Project 2
# Purpose: Run logistic regressions, create results tables
# Rachel Johnson
#==========================================================#
#==========================================================#
# Import data
#==========================================================#
library(boot)
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
#==========================================================#
# Divide into different data sets, create factor levels
#==========================================================#
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
#==========================================================#
# Logistic regressions
#==========================================================#
#With albumin
model1 <- glm(death30 ~ proced + asa + bmi + albumin, data = vadata,
family = binomial(link = "logit"))
summary(model1)
coeff1 <- summary(model1)$coefficients
#Without albumin
model2 <- glm(death30 ~ proced + asa + bmi, data = vadata,
family = binomial(link = "logit"))
summary(model2)
coeff2 <- summary(model2)$coefficients
#Decisions do not change-- albumin can be excluded, but still report results
#p-vals change some, but not in decision; estimates only change a little
#all estimate directions are the same
#albumin is not a significant predictor
#==========================================================#
# Make tables for logistic regression results
#==========================================================#
#Model 1- with albumin
mod1tab <- matrix(data = NA, nrow = 4, ncol = 4)
colnames(mod1tab) <- c("Covariate", "Estimate", "95% CI", "p-value")
mod1tab[1:4, 1] <- c("Procedure (reference = valve surgery)", "ASA (reference = 3 or less)", "BMI", "Albumin")
e <- exp(1)
mod1tab[1, 2] <- round(e^coeff1[2, 1], 3)
mod1tab[2, 2] <- round(e^coeff1[3, 1], 3)
mod1tab[3, 2] <- round(e^coeff1[4, 1], 3)
mod1tab[4, 2] <- round(e^coeff1[5, 1], 3)
mod1tab[1, 3] <- paste(paste(round(e^(coeff1[2, 1] - 1.96*coeff1[2, 2]), 3), ",", sep = ""),
round(e^(coeff1[2, 1] + 1.96*coeff1[2, 2]), 3))
mod1tab[2, 3] <- paste(paste(round(e^(coeff1[3, 1] - 1.96*coeff1[3, 2]), 3), ",", sep = ""),
round(e^(coeff1[3, 1] + 1.96*coeff1[3, 2]), 3))
mod1tab[3, 3] <- paste(paste(round(e^(coeff1[4, 1] - 1.96*coeff1[4, 2]), 3), ",", sep = ""),
round(e^(coeff1[4, 1] + 1.96*coeff1[4, 2]), 3))
mod1tab[4, 3] <- paste(paste(round(e^(coeff1[5, 1] - 1.96*coeff1[5, 2]), 3), ",", sep = ""),
round(e^(coeff1[5, 1] + 1.96*coeff1[5, 2]), 3))
mod1tab[1, 4] <- round(coeff1[2, 4], 3)
mod1tab[2, 4] <- round(coeff1[3, 4], 3)
mod1tab[2, 4] <- "<0.001"
mod1tab[3, 4] <- round(coeff1[4, 4], 3)
mod1tab[4, 4] <- round(coeff1[5, 4], 3)
#Model 2- without albumin
mod2tab <- matrix(data = NA, nrow = 3, ncol = 4)
colnames(mod2tab) <- c("Covariate", "Estimate", "95% CI", "p-value")
mod2tab[1:3, 1] <- c("Procedure (reference = valve surgery)", "ASA (reference = 3 or less)", "BMI")
e <- exp(1)
mod2tab[1, 2] <- round(e^coeff2[2, 1], 3)
mod2tab[2, 2] <- round(e^coeff2[3, 1], 3)
mod2tab[3, 2] <- round(e^coeff2[4, 1], 3)
mod2tab[1, 3] <- paste(paste(round(e^(coeff2[2, 1] - 1.96*coeff2[2, 2]), 3), ",", sep = ""),
round(e^(coeff2[2, 1] + 1.96*coeff2[2, 2]), 3))
mod2tab[2, 3] <- paste(paste(round(e^(coeff2[3, 1] - 1.96*coeff2[3, 2]), 3), ",", sep = ""),
round(e^(coeff2[3, 1] + 1.96*coeff2[3, 2]), 3))
mod2tab[3, 3] <- paste(paste(round(e^(coeff2[4, 1] - 1.96*coeff2[4, 2]), 3), ",", sep = ""),
round(e^(coeff2[4, 1] + 1.96*coeff2[4, 2]), 3))
mod2tab[1, 4] <- round(coeff2[2, 4], 3)
mod2tab[2, 4] <- round(coeff2[3, 4], 3)
mod2tab[2, 4] <- "<0.001"
mod2tab[3, 4] <- round(coeff2[4, 4], 3)
# setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
# write.csv(mod1tab, "ModelWithAlbuminResults.csv")
# write.csv(mod2tab, "ModelWithoutAlbuminResults.csv")
#==========================================================#
# Predicted values to individuals' odds to indivs' pred p
#==========================================================#
#Need a complete case data for BMI, procedure, ASA
comp <- vadata[, c(which(colnames(vadata) == "hospcode"),
which(colnames(vadata) == "sixmonth"),
which(colnames(vadata) == "proced"),
which(colnames(vadata) == "asa_indic"),
which(colnames(vadata) == "bmi"),
which(colnames(vadata) == "death30"))]
comp <- comp[complete.cases(comp), ]
comp_rec <- comp[comp$sixmonth == 39, ]
#Extract fitted values from summary of model2
(int <- summary(model2)$coefficients[1, 1])
(pred_proced <- summary(model2)$coefficients[2, 1])
(pred_asa <- summary(model2)$coefficients[3, 1])
(pred_bmi <- summary(model2)$coefficients[4, 1])
#Create XB column in comp_rec (last 6 month period only)
comp_rec$XB <- int + pred_proced*comp_rec$proced + pred_asa*comp_rec$asa_indic + pred_bmi*comp_rec$bmi
#Create predicted p column in comp
comp_rec$pred_p <- inv.logit(comp_rec$XB)
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
write.csv(comp_rec, "CompleteCasesPd39Predicted.csv")
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
comp_rec <- read.csv("CompleteCasesPd39Predicted.csv", header = T)
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
comp_rec <- read.csv("CompleteCasesPd39Predicted.csv", header = T)
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
comp_rec <- read.csv("CompleteCasesPd39Predicted.csv", header = T)
boot.res <- read.csv("BootstrapResults_raw.csv", header = T)
boot.res <- boot.res[, -1]
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
boot.ci_low <- round(apply(boot.res, 2, quantile, probs = 0.025), 2)
boot.ci_high <- round(apply(boot.res, 2, quantile, probs = 0.975), 2)
boot.ci <- paste(paste(boot.ci_low, ",", sep = ""), boot.ci_high)
hosps <- c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
boottab <- cbind.data.frame(hosps, boot.ci)
colnames(boottab) <- c("Hospital", "95% CI")
tab2 <- matrix(data = NA, nrow = length(unique(rec$hospcode)), ncol = 5)
colnames(tab2) <- c("Hospital", "Patients died", "Patients in surgery", "Percent died",
"Predicted percent died for last 6 months (population-adjusted)")
tab2[1:44, 1] <- unique(rec$hospcode)
tab2[1:44, 2] <- aggregate(rec$death30, list(rec$hospcode), sum)[, 2]
tab2[1:44, 3] <- aggregate(rec$death30, list(rec$hospcode), length)[, 2]
tab2[1:44, 4] <- round(tab2[, 2]/tab2[, 3] * 100, 2)
hosp1_29 <- as.list(unique(comp_rec$hospcode)[1:29])
p1_29 <- as.data.frame(comp_rec[comp_rec$hospcode %in% hosp1_29, c(which(colnames(comp_rec) == "pred_p"),
which(colnames(comp_rec) == "hospcode"))])
tab2[1:29, 5] <- round(aggregate(p1_29$pred_p, list(p1_29$hospcode), mean)[, 2] * 100, 2)
hosp31_44 <- seq(from = 31, to = 44, by = 1)
p31_44 <- as.data.frame(comp_rec[comp_rec$hospcode %in% hosp31_44, c(which(colnames(comp_rec) == "pred_p"),
which(colnames(comp_rec) == "hospcode"))])
tab2[31:44, 5] <- round(aggregate(p31_44$pred_p, list(p31_44$hospcode), mean)[, 2] * 100, 2)
tab2_first <- tab2[1:29, ]
tab2_30 <- as.data.frame(tab2[30, ])
tab2_30 <- t(tab2_30)
tab2_end <- tab2[31:44, ]
boottab_first <- boottab[1:29, ]
boottab_end <- boottab[30:43, ]
finaltab_first <- merge(tab2_first, boottab_first, by = "Hospital")
finaltab_30 <- matrix(data = NA, nrow = 1, ncol = 6)
colnames(finaltab_30) <- colnames(finaltab_first)
finaltab_30[,1:5] <- tab2_30[, 1:5]
finaltab_end <- merge(tab2_end, boottab_end, by = "Hospital")
finaltab <- rbind.data.frame(finaltab_first, finaltab_30, finaltab_end)
finaltab <- as.data.frame(finaltab)
finaltab$`Unusually High?` <- ifelse(finaltab$`Percent died`/finaltab$`Predicted percent died for last 6 months (population-adjusted)` > 1.2,
"Yes", "No")
table(finaltab$`Unusually High?`)
View(finaltab)
26+7
26+17
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
#==========================================================#
# Divide into different data sets, create factor levels
#==========================================================#
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
comp <- vadata[, c(which(colnames(vadata) == "hospcode"),
which(colnames(vadata) == "sixmonth"),
which(colnames(vadata) == "proced"),
which(colnames(vadata) == "asa_indic"),
which(colnames(vadata) == "bmi"),
which(colnames(vadata) == "death30"))]
comp <- comp[complete.cases(comp), ]
comp_rec <- comp[comp$sixmonth == 39, ]
num_iter <- 10000
boot.stats <- matrix(data = NA, ncol = 43, nrow = num_iter)
colnames(boot.stats) <- c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
for(i in 1:num_iter){
set.seed(i)
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
xb <- coeff[1] + coeff[2]*comp$proced + coeff[3]*comp$asa_indic + coeff[4]*comp$bmi
comp$pfit <- inv.logit(xb)
comp_pd39 <- comp[comp$sixmonth == 39, ]
boot.stats[i, ] <- round(aggregate(comp_pd39$pfit, list(comp_pd39$hospcode), mean)[, 2] * 100, 2)
print(i)
}
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
write.csv(boot.stats, "BootstrapResults_raw.csv")
setwd("~/School/AdvancedData")
vadata <- read.csv("VadataCleaned.csv", header = T)
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
comp_rec <- read.csv("CompleteCasesPd39Predicted.csv", header = T)
boot.res <- read.csv("BootstrapResults_raw.csv", header = T)
boot.res <- boot.res[, -1]
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
boot.ci_low <- round(apply(boot.res, 2, quantile, probs = 0.025), 2)
boot.ci_high <- round(apply(boot.res, 2, quantile, probs = 0.975), 2)
boot.ci <- paste(paste(boot.ci_low, ",", sep = ""), boot.ci_high)
hosps <- c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
boottab <- cbind.data.frame(hosps, boot.ci)
colnames(boottab) <- c("Hospital", "95% CI")
tab2 <- matrix(data = NA, nrow = length(unique(rec$hospcode)), ncol = 5)
colnames(tab2) <- c("Hospital", "Patients died", "Patients in surgery", "Percent died",
"Predicted percent died for last 6 months (population-adjusted)")
tab2[1:44, 1] <- unique(rec$hospcode)
tab2[1:44, 2] <- aggregate(rec$death30, list(rec$hospcode), sum)[, 2]
tab2[1:44, 3] <- aggregate(rec$death30, list(rec$hospcode), length)[, 2]
tab2[1:44, 4] <- round(tab2[, 2]/tab2[, 3] * 100, 2)
#Note: hospital 30 does not have any data for last period, so it will not be estimated for last pd.
hosp1_29 <- as.list(unique(comp_rec$hospcode)[1:29])
p1_29 <- as.data.frame(comp_rec[comp_rec$hospcode %in% hosp1_29, c(which(colnames(comp_rec) == "pred_p"),
which(colnames(comp_rec) == "hospcode"))])
tab2[1:29, 5] <- round(aggregate(p1_29$pred_p, list(p1_29$hospcode), mean)[, 2] * 100, 2)
hosp31_44 <- seq(from = 31, to = 44, by = 1)
p31_44 <- as.data.frame(comp_rec[comp_rec$hospcode %in% hosp31_44, c(which(colnames(comp_rec) == "pred_p"),
which(colnames(comp_rec) == "hospcode"))])
tab2[31:44, 5] <- round(aggregate(p31_44$pred_p, list(p31_44$hospcode), mean)[, 2] * 100, 2)
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
write.csv(tab2, "TableDeathsByHospital.csv")
tab2_first <- tab2[1:29, ]
tab2_30 <- as.data.frame(tab2[30, ])
tab2_30 <- t(tab2_30)
tab2_end <- tab2[31:44, ]
boottab_first <- boottab[1:29, ]
boottab_end <- boottab[30:43, ]
finaltab_first <- merge(tab2_first, boottab_first, by = "Hospital")
finaltab_30 <- matrix(data = NA, nrow = 1, ncol = 6)
colnames(finaltab_30) <- colnames(finaltab_first)
finaltab_30[,1:5] <- tab2_30[, 1:5]
finaltab_end <- merge(tab2_end, boottab_end, by = "Hospital")
finaltab <- rbind.data.frame(finaltab_first, finaltab_30, finaltab_end)
finaltab <- as.data.frame(finaltab)
finaltab$`Unusually High?` <- ifelse(finaltab$`Percent died`/finaltab$`Predicted percent died for last 6 months (population-adjusted)` > 1.2,
"Yes", "No")
table(finaltab$`Unusually High?`)
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
write.csv(finaltab, "TableExpectedPropsBootstrap.csv")
