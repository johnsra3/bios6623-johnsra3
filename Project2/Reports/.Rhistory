hx <- dnorm(x,mean,sd)
plot(hx)
plot(hx ~ x)
plot(hx ~ x, pch = ".")
abline(h = -83.2590)
abline(x = -83.2590)
abline(v = -83.2590)
abline(v = -81.7680)
sqrt(43560)
sqrt(304920)
library(knitr)
library(data.table)
setwd("//proton/EJCgroupStudentThesesJohnsonR/Data/DataSource")
enroll <- read.csv("Enrollment.csv", header = T)
epicenc <- read.csv("Epic_Encounters.csv", header = T)
regenc <- read.csv("Reg_Encounters.csv", header = T)
setwd("//proton/EJCgroupStudentThesesJohnsonR/Data/DataCreated")
pex_alldata <- read.csv("C:/Users/johnsra3/Documents/Thesis/DataRaw/Episode.csv", header = T)
pex <- pex_alldata[pex_alldata$rsn_pe == 1, ]
pex$StartAge_day <- pex$StartAge * 365
pex$EndAge_day <- pex$EndAge * 365
pex <- pex[, -which(colnames(pex) == "StartAge")]
pex <- pex[, -which(colnames(pex) == "EndAge")]
pex <- pex[, -which(colnames(pex) == "rsn_pe")]
pex <- pex[, -which(colnames(pex) == "ce_meas_age_begin")]
pex <- pex[, -which(colnames(pex) == "ce_meas_age_end")]
lengthbt <- matrix(data = NA, nrow = nrow(pex), ncol = 2)
lengthbt[1, 2] <- NA
pex <- pex[order(pex$cffidno), ]
for(i in 2:nrow(pex)){
lengthbt[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt[i, 2] <- NA
}
}
lengthbt <- as.data.frame(lengthbt)
colnames(lengthbt) <- c("cffidno1", "lengthbtpex")
pex_gr0 <- cbind.data.frame(pex, lengthbt)
pex_gr0 <- pex_gr0[, -which(colnames(pex_gr0) == "cffidno1")]
pex <- pex_gr0
rm(pex_gr0)
pex$ident <- NA
for(i in 2:nrow(pex)){
if(identical(pex$cffidno[i-1], pex$cffidno[i])){
pex$ident[i] <- 1
} else {
pex$ident[i] <- 0
}
}
pex$lessthan7 <- ifelse(pex$lengthbtpex <= 7, 1, 0)
pex$combined <- NA
compare_test <- pex
for(i in 2:nrow(pex)){
if(pex$ident[i] == 1 & pex$lessthan7[i] == 1 & !is.na(pex$lessthan7[i])){
pex$EndAge_day[i-1] <- pex$EndAge_day[i]
pex$ce_fvc_end[i-1] <- pex$ce_fvc_end[i]
pex$ce_fev1_end[i-1] <- pex$ce_fev1_end[i]
pex$ce_fef25_end[i-1] <- pex$ce_fef25_end[i]
pex$combined[i] <- 1
} else {
pex$combined[i] <- 0
}
}
pex <- pex[pex$combined != 1, ]
lengthbt_new <- matrix(data = NA, nrow = nrow(pex), ncol = 2)
lengthbt_new[1, 2] <- NA
pex <- pex[order(pex$cffidno), ]
for(i in 2:nrow(pex)){
lengthbt_new[i, 1] <- pex$cffidno[i]
if(identical(pex$cffidno[i], pex$cffidno[i-1])){
lengthbt_new[i, 2] <- pex$StartAge_day[i] - pex$EndAge_day[i-1]
} else {
lengthbt_new[i, 2] <- NA
}
}
lengthbt_new <- as.data.frame(lengthbt_new)
colnames(lengthbt_new) <- c("cffidno1", "lengthbtpex")
pex <- pex[, -which(colnames(pex) == "lengthbtpex")]
pex <- pex[, -which(colnames(pex) == "lessthan7")]
pex <- pex[, -which(colnames(pex) == "ident")]
pex <- pex[, -which(colnames(pex) == "combined")]
pex_new <- cbind.data.frame(pex, lengthbt_new)
pex_new <- pex_new[, -which(colnames(pex_new) == "cffidno1")]
pex <- pex_new
rm(pex_new)
pex$diff_fvc <- pex$ce_fvc_end - pex$ce_fvc_begin
pex$diff_fev1 <- pex$ce_fev1_end - pex$ce_fev1_begin
pex$diff_fef25 <- pex$ce_fef25_end - pex$ce_fef25_begin
pex$ep_length <- pex$EndAge_day - pex$StartAge_day
pex$ce_fef25_begin[pex$ce_fef25_begin == 0] <- NA
pex$ce_fev1_begin[pex$ce_fev1_begin == 0] <- NA
pex$ce_fvc_begin[pex$ce_fvc_begin == 0] <- NA
age_0 <- pex[which(pex$StartAge_day == 0), ]
#############
age_initial <- cbind.data.frame(enroll$cffidno, enroll$ConsentAge)
age_initial <- age_initial[order(age_initial$`enroll$cffidno`), ]
colnames(age_initial) <- c("cffidno", "ConsentAge")
regenc_ages <- regenc[ , c(which(colnames(regenc) == "cffidno"), which(colnames(regenc) == "VisitAge"))]
regenc_ages <- as.data.table(regenc_ages)
regenc_ages <- setDT(regenc_ages)[, .SD[which.max(VisitAge)], by = cffidno]
regenc_ages$source <- "registry"
epicenc_ages <- epicenc[, c(which(colnames(epicenc) == "cffidno"), which(colnames(epicenc) == "VisitAge"))]
epicenc_ages <- as.data.table(epicenc_ages)
epicenc_ages <- setDT(epicenc_ages)[, .SD[which.max(VisitAge)], by = cffidno]
epicenc_ages$source <- "epic"
endages <- rbind.data.frame(regenc_ages, epicenc_ages)
endages <- as.data.table(endages)
endages <- setDT(endages)[, .SD[which.max(VisitAge)], by = cffidno]
age_initial <- age_initial[order(age_initial$cffidno), ]
endages <- endages[order(endages$cffidno), ]
ages <- merge(age_initial, endages, by = "cffidno")
colnames(ages)[3] <- "LastVisitAge"
#Create follow-up variable
ages$followup <- ages$LastVisitAge - ages$ConsentAge
pex <- pex[pex$ep_length < 300, ]
hist(pex$ep_length, breaks = 30, main = "Histogram of Lengths of\nClinically Defined Episodes",
xlab = "Length of Episode (days)")
lengthtab <- matrix(data = NA, nrow = 5, ncol = 2)
colnames(lengthtab) <- c("", "")
lengthtab[1:5, 1] <- c("Minimum", "25th percentile", "Median", "75th percentile", "Maximum")
lengthtab[1:5, 2] <- round(fivenum(pex$ep_length), 4)
kable(lengthtab)
setwd("//proton/EJCgroupStudentThesesJohnsonR/Data/DataCreated")
freqpex <- read.csv("NumPexPerIndiv.csv", header = T)
freqpex <- freqpex[, -1]
freqpex <- merge(freqpex, ages, by = "cffidno")
mean(freqpex$followup)
mean(freqpex$Freq)
var(freqpex$Freq)
10350 * .20
10350 * .20 * 0.75
345 * .2
1552.5/69
library(haven)
library(boot)
setwd("~/School/AdvancedData")
vadata <- read_sas("~/School/AdvancedData/vadata2.sas7bdat")
#==========================================================#
# Divide into different data sets (will use later)
#==========================================================#
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
plot((rec$weight)/(rec$height^2) * 703, rec$bmi)
abline(1, 1)
hosp1_5 <- rec[rec$hospcode >= 1 & rec$hospcode < 6, ]
plot((hosp1_5$weight)/(hosp1_5$height^2) * 703, hosp1_5$bmi)
abline(1, 1)
hosp6_10 <- rec[rec$hospcode > 5 & rec$hospcode < 11, ]
plot((hosp6_10$weight)/(hosp6_10$height^2) * 703, hosp6_10$bmi)
abline(1, 1)
#All 5 of these hosp code BMIs are wrong (0 extraneous)
hosp11_15 <- rec[rec$hospcode > 10 & rec$hospcode < 16, ]
plot((hosp11_15$weight)/(hosp11_15$height^2) * 703, hosp11_15$bmi)
abline(1, 1)
#All 5 of these hosp code BMIs are wrong (0 extraneous)
hosp16 <- rec[rec$hospcode == 16, ]
plot((hosp16$weight)/(hosp16$height^2) * 703, hosp16$bmi)
abline(1, 1)
#Wrong BMI still :(
#==========================================================#
# Cleaning: fix BMI calculation issues
#==========================================================#
bmifix <- rec[rec$hospcode <= 16, ]
#All issues w/ weight and not height
bmifix$weight <- bmifix$weight * 2.2
bmifix$bmi <- bmifix$weight/(bmifix$height^2) * 703
plot((bmifix$weight)/(bmifix$height^2) * 703, bmifix$bmi)
#One BMI is too low
#Hospital codes 17-44
hosp17plus <- rec[rec$hospcode > 16, ]
plot((hosp17plus$weight)/(hosp17plus$height^2) * 703, hosp17plus$bmi)
abline(1, 1)
#All okay for calculation, 4 extraneous need to be fixed
hosp17plus$bmi_check <- (hosp17plus$weight)/(hosp17plus$height^2) * 703
hosp17plus$diff <- round(hosp17plus$bmi - hosp17plus$bmi_check, 3)
plot(hosp17plus$bmi, hosp17plus$bmi_check)
diffs <- hosp17plus[hosp17plus$diff != 0 & is.na(hosp17plus$diff) == F, ]
hosp17plus$bmi <- hosp17plus$bmi_check
hosp17plus <- hosp17plus[, -c(which(colnames(hosp17plus) == "bmi_check"),
which(colnames(hosp17plus) == "diff"))]
#Re-bind hospital code divided data
rec_new <- rbind.data.frame(bmifix, hosp17plus)
plot((rec_new$weight)/(rec_new$height^2) * 703, rec_new$bmi)
abline(1, 1)
#All good now!
#Re-bind old and new data
vadata <- rbind.data.frame(rec_new, old)
proc2 <- which(vadata$proced == 2)
vadata <- vadata[-proc2, ]
table(vadata$asa)
#some small categories--see if deaths in all groups
table(vadata$death30, vadata$asa)
#no deaths in asa=1; acc. to investigator, categ. 1/2/3 vs. 4/5
#note: 664 are missing
#Create indicator variable
vadata$asa_indic <- ifelse(vadata$asa >= 4 & is.na(vadata$asa) == F, 1, 0)
#Collapse categories
vadata$asa <- ifelse(vadata$asa <= 3, "3 or less", vadata$asa)
vadata$asa <- ifelse(vadata$asa >=4, "4 or greater", vadata$asa)
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
model2 <- glm(death30 ~ proced + asa + bmi, data = vadata,
family = binomial(link = "logit"))
summary(model2)
comp <- vadata[, c(which(colnames(vadata) == "hospcode"),
which(colnames(vadata) == "sixmonth"),
which(colnames(vadata) == "proced"),
which(colnames(vadata) == "asa_indic"),
which(colnames(vadata) == "bmi"),
which(colnames(vadata) == "death30"))]
comp <- comp[complete.cases(comp), ]
comp_rec <- comp[comp$sixmonth == 39, ]
(int <- summary(model2)$coefficients[1, 1])
(pred_proced <- summary(model2)$coefficients[2, 1])
(pred_asa <- summary(model2)$coefficients[3, 1])
(pred_bmi <- summary(model2)$coefficients[4, 1])
comp_rec$XB <- int + pred_proced*comp_rec$proced + pred_asa*comp_rec$asa_indic + pred_bmi*comp_rec$bmi
#Create predicted p column in comp
comp_rec$pred_p <- inv.logit(comp_rec$XB)
num_iter <- 100
boot.stats <- matrix(data = NA, ncol = length(unique(comp$hospcode)), nrow = num_iter)
fitold <- matrix(data = NA, ncol = nrow(comp_rec), nrow = num_iter)
colnames(boot.stats) <- unique(comp$hospcode)
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
xb <- coeff[1] + coeff[2]*comp_rec$proced + coeff[3]*comp_rec$asa_indic + coeff[4]*comp_rec$bmi
pfit <- inv.logit(fitold$xb)
pfit <- inv.logit(xb)
View(comp_rec)
boot.fits$xb <- coeff[1] + coeff[2]*comp_rec$proced + coeff[3]*comp_rec$asa_indic + coeff[4]*comp_rec$bmi
boot.fits <- matrix(data = NA, ncol = 2, nrow = nrow(comp_rec))
boot.fits$xb <- coeff[1] + coeff[2]*comp_rec$proced + coeff[3]*comp_rec$asa_indic + coeff[4]*comp_rec$bmi
boot.fits[, i] <- coeff[1] + coeff[2]*comp_rec$proced + coeff[3]*comp_rec$asa_indic + coeff[4]*comp_rec$bmi
boot.fits[, 1] <- coeff[1] + coeff[2]*comp_rec$proced + coeff[3]*comp_rec$asa_indic + coeff[4]*comp_rec$bmi
boot.dat <- boot.dat[boot.dat$sixmonth == 39, ]
boot.dat$xb <- coeff[1] + coeff[2]*comp_rec$proced + coeff[3]*comp_rec$asa_indic + coeff[4]*comp_rec$bmi
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.dat$xb <- coeff[1] + coeff[2]*comp_rec[comp_rec$sixmonth == 39, ]$proced +
coeff[3]*comp_rec[comp_rec$sixmonth == 39, ]$asa_indic + coeff[4]*comp_rec[comp_rec$sixmonth == 39, ]$bmi
for(i in 1:num_iter){
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.dat$xb <- coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi
boot.dat$pfit[boot.dat$sixmonth == 39, ] <- inv.logit(xb)
boot.stats[i, ] <- round(aggregate(boot.dat$pfit[boot.dat$sixmonth == 39], list(boot.dat[boot.dat$sixmonth == 39,]$hospcode),
mean)[, 2] * 100, 2)
print(i)
}
for(i in 1:num_iter){
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.dat$xb <- coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi
boot.dat$pfit[boot.dat$sixmonth == 39] <- inv.logit(xb)
boot.stats[i, ] <- round(aggregate(boot.dat$pfit[boot.dat$sixmonth == 39], list(boot.dat[boot.dat$sixmonth == 39,]$hospcode),
mean)[, 2] * 100, 2)
print(i)
}
for(i in 1:num_iter){
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.dat$xb <- coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi
boot.dat$pfit[boot.dat$sixmonth == 39] <- inv.logit(boot.dat$xb)
boot.stats[i, ] <- round(aggregate(boot.dat$pfit[boot.dat$sixmonth == 39], list(boot.dat[boot.dat$sixmonth == 39, ]$hospcode),
mean)[, 2] * 100, 2)
print(i)
}
boot.stats <- matrix(data = NA, ncol = 43, nrow = num_iter)
num_iter <- 100
boot.stats <- matrix(data = NA, ncol = 43, nrow = num_iter)
colnames(boot.stats) <- unique(comp$hospcode)
colnames(boot.stats) <- c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
for(i in 1:num_iter){
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.dat$xb <- coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi
boot.dat$pfit[boot.dat$sixmonth == 39] <- inv.logit(boot.dat$xb)
boot.stats[i, ] <- round(aggregate(boot.dat$pfit[boot.dat$sixmonth == 39], list(boot.dat[boot.dat$sixmonth == 39, ]$hospcode),
mean)[, 2] * 100, 2)
print(i)
}
c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.dat$xb <- coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi
boot.dat[boot.dat$sixmonth == 39]$xb <- coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi
boot.fits <- matrix(data = NA, nrow = nrow(boot.dat[boot.dat$sixmonth == 39,]))
warnings()
num_iter <- 100
boot.stats <- matrix(data = NA, ncol = 43, nrow = num_iter)
boot.stats <- matrix(data = NA, ncol = 43, nrow = num_iter)
num_iter <- 100
colnames(boot.stats) <- c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.fits <- matrix(data = NA, nrow = nrow(boot.dat[boot.dat$sixmonth == 39,]))
boot.fits$xb <- coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi
boot.dat$pfit[boot.dat$sixmonth == 39] <- inv.logit(boot.dat$xb)
boot.fits <- as.data.frame(matrix(data = NA, nrow = nrow(boot.dat[boot.dat$sixmonth == 39,])))
num_iter <- 100
num_iter <- 100
boot.stats <- matrix(data = NA, ncol = 43, nrow = num_iter)
colnames(boot.stats) <- c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.fits <- as.data.frame(matrix(data = NA, nrow = nrow(boot.dat[boot.dat$sixmonth == 39,])))
boot.fits$xb <- as.data.frame(coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi)
boot.dat$pfit[boot.dat$sixmonth == 39] <- inv.logit(boot.dat$xb)
View(boot.fits)
boot.dat$pfit[boot.dat$sixmonth == 39] <- inv.logit(boot.dat[, 2])
boot.fits$pfit[boot.dat$sixmonth == 39] <- inv.logit(boot.dat[, 2])
boot.fits$pfit <- NA
boot.fits$pfit <- NA
class(boot.fits)
library(haven)
library(boot)
setwd("~/School/AdvancedData")
vadata <- read_sas("~/School/AdvancedData/vadata2.sas7bdat")
#==========================================================#
# Divide into different data sets (will use later)
#==========================================================#
rec <- vadata[vadata$sixmonth == 39, ]
old <- vadata[vadata$sixmonth != 39, ]
#==========================================================#
# Look at BMI issues in most recent period
#==========================================================#
plot((rec$weight)/(rec$height^2) * 703, rec$bmi)
abline(1, 1)
hosp1_5 <- rec[rec$hospcode >= 1 & rec$hospcode < 6, ]
plot((hosp1_5$weight)/(hosp1_5$height^2) * 703, hosp1_5$bmi)
abline(1, 1)
#All 5 of these hosp code BMIs are wrong (1 extraneous)
hosp6_10 <- rec[rec$hospcode > 5 & rec$hospcode < 11, ]
plot((hosp6_10$weight)/(hosp6_10$height^2) * 703, hosp6_10$bmi)
abline(1, 1)
#All 5 of these hosp code BMIs are wrong (0 extraneous)
hosp11_15 <- rec[rec$hospcode > 10 & rec$hospcode < 16, ]
plot((hosp11_15$weight)/(hosp11_15$height^2) * 703, hosp11_15$bmi)
abline(1, 1)
#All 5 of these hosp code BMIs are wrong (0 extraneous)
hosp16 <- rec[rec$hospcode == 16, ]
plot((hosp16$weight)/(hosp16$height^2) * 703, hosp16$bmi)
abline(1, 1)
#Wrong BMI still :(
bmifix <- rec[rec$hospcode <= 16, ]
#All issues w/ weight and not height
bmifix$weight <- bmifix$weight * 2.2
bmifix$bmi <- bmifix$weight/(bmifix$height^2) * 703
plot((bmifix$weight)/(bmifix$height^2) * 703, bmifix$bmi)
#One BMI is too low
#Hospital codes 17-44
hosp17plus <- rec[rec$hospcode > 16, ]
plot((hosp17plus$weight)/(hosp17plus$height^2) * 703, hosp17plus$bmi)
abline(1, 1)
#All okay for calculation, 4 extraneous need to be fixed
hosp17plus$bmi_check <- (hosp17plus$weight)/(hosp17plus$height^2) * 703
hosp17plus$diff <- round(hosp17plus$bmi - hosp17plus$bmi_check, 3)
plot(hosp17plus$bmi, hosp17plus$bmi_check)
diffs <- hosp17plus[hosp17plus$diff != 0 & is.na(hosp17plus$diff) == F, ]
hosp17plus$bmi <- hosp17plus$bmi_check
hosp17plus <- hosp17plus[, -c(which(colnames(hosp17plus) == "bmi_check"),
which(colnames(hosp17plus) == "diff"))]
#Re-bind hospital code divided data
rec_new <- rbind.data.frame(bmifix, hosp17plus)
plot((rec_new$weight)/(rec_new$height^2) * 703, rec_new$bmi)
abline(1, 1)
#All good now!
#Re-bind old and new data
vadata <- rbind.data.frame(rec_new, old)
#==========================================================#
# Cleaning: remove proced = 2,
#==========================================================#
proc2 <- which(vadata$proced == 2)
vadata <- vadata[-proc2, ]
#==========================================================#
# Cleaning: collapse ASA categories
#==========================================================#
table(vadata$asa)
#some small categories--see if deaths in all groups
table(vadata$death30, vadata$asa)
#no deaths in asa=1; acc. to investigator, categ. 1/2/3 vs. 4/5
#note: 664 are missing
#Create indicator variable
vadata$asa_indic <- ifelse(vadata$asa >= 4 & is.na(vadata$asa) == F, 1, 0)
#Collapse categories
vadata$asa <- ifelse(vadata$asa <= 3, "3 or less", vadata$asa)
vadata$asa <- ifelse(vadata$asa >=4, "4 or greater", vadata$asa)
vadata$asa <- factor(vadata$asa, levels = c("3 or less", "4 or greater"))
model2 <- glm(death30 ~ proced + asa + bmi, data = vadata,
family = binomial(link = "logit"))
summary(model2)
comp <- vadata[, c(which(colnames(vadata) == "hospcode"),
which(colnames(vadata) == "sixmonth"),
which(colnames(vadata) == "proced"),
which(colnames(vadata) == "asa_indic"),
which(colnames(vadata) == "bmi"),
which(colnames(vadata) == "death30"))]
comp <- comp[complete.cases(comp), ]
comp_rec <- comp[comp$sixmonth == 39, ]
#Extract fitted values from summary of model2
(int <- summary(model2)$coefficients[1, 1])
(pred_proced <- summary(model2)$coefficients[2, 1])
(pred_asa <- summary(model2)$coefficients[3, 1])
(pred_bmi <- summary(model2)$coefficients[4, 1])
#Create XB column in comp_rec (last 6 month period only)
comp_rec$XB <- int + pred_proced*comp_rec$proced + pred_asa*comp_rec$asa_indic + pred_bmi*comp_rec$bmi
#Create predicted p column in comp
comp_rec$pred_p <- inv.logit(comp_rec$XB)
num_iter <- 100
boot.stats <- matrix(data = NA, ncol = 43, nrow = num_iter)
colnames(boot.stats) <- c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.fits <- as.data.frame(matrix(data = NA, nrow = nrow(boot.dat[boot.dat$sixmonth == 39,])))
View(boot.fits)
boot.fits[, 1] <- as.data.frame(coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi)
boot.fits <- as.data.frame(matrix(data = NA, nrow = nrow(boot.dat[boot.dat$sixmonth == 39,],), ncol = 2))
boot.fits <- as.data.frame(matrix(data = NA, nrow = nrow(boot.dat[boot.dat$sixmonth == 39,]), ncol = 2))
View(boot.fits)
boot.fits[, 1] <- coeff[1] + coeff[2]*boot.dat[boot.dat$sixmonth == 39, ]$proced +
coeff[3]*boot.dat[boot.dat$sixmonth == 39, ]$asa_indic + coeff[4]*boot.dat[boot.dat$sixmonth == 39, ]$bmi
boot.fits[, 2] <- inv.logit(boot.dat[boot.dat$sixmonth == 39, 2])
boot.fits[, 2] <- inv.logit(boot.fits$V1[boot.dat$sixmonth == 39, 2])
boot.fits <- as.data.frame(matrix(data = NA, nrow = nrow(boot.dat[boot.dat$sixmonth == 39,]), ncol = 4))
boot.fits <- boot.dat[boot.dat$sixmonth == 39, ]
View(boot.fits)
boot.fits <- boot.dat[boot.dat$sixmonth == 39, ]
boot.fits$xb <- coeff[1] + coeff[2]*boot.fits$proced + coeff[3]*boot.fits$asa_indic + coeff[4]*boot.fits$bmi
warnings
warnings()
boot.fits <- boot.dat[boot.dat$sixmonth == 39, ]
boot.fits$xb <- NA
boot.fits$pfit <- NA
View(boot.fits)
boot.fits$xb <- coeff[1] + coeff[2]*boot.fits$proced + coeff[3]*boot.fits$asa_indic + coeff[4]*boot.fits$bmi
boot.fits$pfit <- inv.logit(boot.fits$V1[boot.dat$sixmonth == 39, 2])
boot.fits$pfit <- inv.logit(boot.fits$xb)
boot.stats[i, ] <- round(aggregate(boot.fits$pfit, list(boot.fits$hospcode), mean)[, 2] * 100, 2)
boot.stats[1, ] <- round(aggregate(boot.fits$pfit, list(boot.fits$hospcode), mean)[, 2] * 100, 2)
View(boot.stats)
num_iter <- 100
boot.stats <- matrix(data = NA, ncol = 43, nrow = num_iter)
colnames(boot.stats) <- c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
for(i in 1:num_iter){
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.fits <- boot.dat[boot.dat$sixmonth == 39, ]
boot.fits$xb <- NA
boot.fits$pfit <- NA
boot.fits$xb <- coeff[1] + coeff[2]*boot.fits$proced + coeff[3]*boot.fits$asa_indic + coeff[4]*boot.fits$bmi
boot.fits$pfit <- inv.logit(boot.fits$xb)
boot.stats[i, ] <- round(aggregate(boot.fits$pfit, list(boot.fits$hospcode), mean)[, 2] * 100, 2)
print(i)
}
View(boot.dat)
View(boot.stats)
set.seed(9271024)
num_iter <- 10000
boot.stats <- matrix(data = NA, ncol = 43, nrow = num_iter)
colnames(boot.stats) <- c(seq(from = 1, to = 29, by = 1), seq(from = 31, to = 44, by = 1))
for(i in 1:num_iter){
boot.samps <- sample(nrow(comp), replace = T)
boot.dat <- comp[boot.samps, ]
boot.model <- glm(death30 ~ proced + asa_indic + bmi, data = boot.dat, family = binomial(link = "logit"))
coeff <- summary(boot.model)$coefficients
boot.fits <- boot.dat[boot.dat$sixmonth == 39, ]
boot.fits$xb <- NA
boot.fits$pfit <- NA
boot.fits$xb <- coeff[1] + coeff[2]*boot.fits$proced + coeff[3]*boot.fits$asa_indic + coeff[4]*boot.fits$bmi
boot.fits$pfit <- inv.logit(boot.fits$xb)
boot.stats[i, ] <- round(aggregate(boot.fits$pfit, list(boot.fits$hospcode), mean)[, 2] * 100, 2)
print(i)
}
View(boot.stats)
hist(boot.stats[, 32])
hist(boot.stats[, 41])
hist(boot.stats[, 18])
hist(boot.stats[, 3])
setwd("C:/Repositories/bios6623-johnsra3/Project2/Reports")
write.csv(boot.stats, "BootstrapResults_raw.csv")
